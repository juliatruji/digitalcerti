---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/authentications":
    post:
      summary: Autenticacion
      tags:
      - Autenticación
      parameters: []
      responses:
        '200':
          description: Autenticación correcta
          content:
            application/json:
              schema:
                type: object
                properties:
                  token_type:
                    type: string
                  access_token:
                    type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Correo Electrónico
                password:
                  type: string
                  format: password
                  description: Contraseña
              required:
              - email
              - password
  "/certificate_categories":
    get:
      summary: Lista de Categorias de certificatos
      tags:
      - Categorias Certificados
      parameters:
      - name: client_id
        in: query
        description: ID del cliente
        schema:
          type: integer
      - name: q
        in: query
        description: Búsqueda por (Nombre)
        schema:
          type: string
      - name: per_page
        in: query
        description: Cantidad de elementos por página
        schema:
          type: string
      - name: page
        in: query
        description: Página
        schema:
          type: string
      - name: from
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Inicial'
      - name: to
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Final'
      - name: filter_range_date
        in: query
        schema:
          type: string
          enum:
          - created_at
          - updated_at
          - start_date
          - end_date
        description: |+
          Rango: Usar

            * **[created_at]** Fechas de Creación de los Registros <small>*(Por defecto)*</small>
            * **[updated_at]** Fechas de Actualización de los Registros

      - name: sort
        in: query
        schema:
          type: string
          enum:
          - created_at:desc
          - created_at:asc
          - updated_at:desc
          - updated_at:asc
        description: |+
          #### Ordenar:

            * **[created_at:desc]** Últimos creados al inicio
            * **[created_at:asc]** Últimos creados al final
            * **[updated_at:desc]** Últimos actualizados al inicio
            * **[updated_at:asc]** Últimos actualizados al final

      security:
      - bearerAuth: []
      responses:
        '200':
          description: Lista de Categorias de certificatos
          headers:
            Per-page:
              type: integer
              description: Total de elementos por página
            Total:
              type: integer
              description: Total de elementos
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/certificate_category"
    post:
      summary: Crear Categoria de Certificado
      tags:
      - Categorias Certificados
      parameters: []
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Categoria de Certificado creado
        '422':
          description: Error al crear Categoria de Certificado
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                certificate_category:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Nombre
                    client_id:
                      type: integer
                      description: ID del client
  "/certificate_categories/{id}":
    get:
      summary: Detalle de Categoria de Certificado
      tags:
      - Categorias Certificados
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Categoria de certificato encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/certificate_category"
        '404':
          description: Categoria de certificato no encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
    patch:
      summary: Actualizar Categoria de Certificado
      tags:
      - Categorias Certificados
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Categorias Certificados actualizado
        '422':
          description: Error al actualizar el certificate category
        '404':
          description: Cliente no encontrado
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                certificate_category:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Nombre
                    client_id:
                      type: integer
                      description: ID del client
    delete:
      summary: Eliminar Categoria de Certificado
      tags:
      - Categorias Certificados
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Categoria de Certificado eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado
                  message:
                    type: string
                    description: Mensaje o descripción
                  data:
                    "$ref": "#/components/schemas/certificate_category"
        '422':
          description: Error al eliminar Certificado eliminado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unprocessable_entity"
        '404':
          description: Certificado eliminado no encontrada
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
  "/certificates":
    get:
      summary: Lista de Certificados
      tags:
      - Certificados
      parameters:
      - name: location_id
        in: query
        description: ID del Campus
        schema:
          type: integer
      - name: certificate_category_id
        in: query
        description: ID de Categoria de certificado
        schema:
          type: integer
      - name: q
        in: query
        description: Búsqueda por (Nombre, Record Folio)
        schema:
          type: string
      - name: per_page
        in: query
        description: Cantidad de elementos por página
        schema:
          type: string
      - name: page
        in: query
        description: Página
        schema:
          type: string
      - name: from
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Inicial'
      - name: to
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Final'
      - name: filter_range_date
        in: query
        schema:
          type: string
          enum:
          - created_at
          - updated_at
          - start_date
          - end_date
        description: |+
          Rango: Usar

            * **[created_at]** Fechas de Creación de los Registros <small>*(Por defecto)*</small>
            * **[updated_at]** Fechas de Actualización de los Registros

      - name: sort
        in: query
        schema:
          type: string
          enum:
          - created_at:desc
          - created_at:asc
          - updated_at:desc
          - updated_at:asc
        description: |+
          #### Ordenar:

            * **[created_at:desc]** Últimos creados al inicio
            * **[created_at:asc]** Últimos creados al final
            * **[updated_at:desc]** Últimos actualizados al inicio
            * **[updated_at:asc]** Últimos actualizados al final

      security:
      - bearerAuth: []
      responses:
        '200':
          description: Lista de certificados
          headers:
            Per-page:
              type: integer
              description: Total de elementos por página
            Total:
              type: integer
              description: Total de elementos
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/certificate"
    post:
      summary: Crear Certificado
      tags:
      - Certificados
      parameters: []
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Certificado creado
        '422':
          description: Error al crear certificado
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                certificate:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Nombre
                    folio:
                      type: string
                      description: Folio
                    register:
                      type: string
                      description: Registro
                    description:
                      type: string
                      description: Descripcion
                    location_id:
                      type: integer
                      description: ID de location
                    certificate_category_id:
                      type: integer
                      description: ID de Categoria de Certificado
  "/certificates/{id}":
    get:
      summary: Detalle de un Certificado
      tags:
      - Certificados
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Certificado encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/certificate"
        '404':
          description: Certificado no encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
    patch:
      summary: Actualizar Certificado
      tags:
      - Certificados
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Certificado actualizado
        '422':
          description: Error al actualizar Certificado
        '404':
          description: Certificado no encontrado
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                certificate:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Nombre
                    folio:
                      type: string
                      description: Folio
                    register:
                      type: string
                      description: Register
                    description:
                      type: string
                      description: Descripcion
                    location_id:
                      type: integer
                      description: ID de location
                    certificate_category_id:
                      type: integer
                      description: ID de Categoria de Certificado
    delete:
      summary: Eliminar Certificado
      tags:
      - Certificados
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Certificado eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado
                  message:
                    type: string
                    description: Mensaje o descripción
                  data:
                    "$ref": "#/components/schemas/certificate"
        '422':
          description: Error al eliminar Certificado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unprocessable_entity"
        '404':
          description: Certificado no encontrada
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
  "/clients":
    get:
      summary: Lista de Clientes
      tags:
      - Clientes
      parameters:
      - name: country_id
        in: query
        description: ID del País
        schema:
          type: integer
      - name: department_id
        in: query
        description: ID del Departamento
        schema:
          type: integer
      - name: province_id
        in: query
        description: ID de Provincia
        schema:
          type: integer
      - name: district_id
        in: query
        description: ID de Distrito
        schema:
          type: integer
      - name: active
        in: query
        description: Activo e Inactivo
        schema:
          type: boolean
      - name: q
        in: query
        description: Búsqueda por (Nombre, Nombre Legal, ID legal y descripción)
        schema:
          type: string
      - name: per_page
        in: query
        description: Cantidad de elementos por página
        schema:
          type: string
      - name: page
        in: query
        description: Página
        schema:
          type: string
      - name: from
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Inicial'
      - name: to
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Final'
      - name: filter_range_date
        in: query
        schema:
          type: string
          enum:
          - created_at
          - updated_at
          - start_date
          - end_date
        description: |+
          Rango: Usar

            * **[created_at]** Fechas de Creación de los Registros <small>*(Por defecto)*</small>
            * **[updated_at]** Fechas de Actualización de los Registros

      - name: sort
        in: query
        schema:
          type: string
          enum:
          - created_at:desc
          - created_at:asc
          - updated_at:desc
          - updated_at:asc
        description: |+
          #### Ordenar:

            * **[created_at:desc]** Últimos creados al inicio
            * **[created_at:asc]** Últimos creados al final
            * **[updated_at:desc]** Últimos actualizados al inicio
            * **[updated_at:asc]** Últimos actualizados al final

      security:
      - bearerAuth: []
      responses:
        '200':
          description: Lista de Clientes
          headers:
            Per-page:
              type: integer
              description: Total de elementos por página
            Total:
              type: integer
              description: Total de elementos
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/client"
    post:
      summary: Crear Cliente
      tags:
      - Clientes
      parameters: []
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Cliente creado
        '422':
          description: Error al crear Cliente
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                geolocation:
                  type: object
                  properties:
                    country_id:
                      type: integer
                      description: País
                    department_id:
                      type: integer
                      description: Departamento
                    province_id:
                      type: integer
                      description: Provincia
                    district_id:
                      type: integer
                      description: Distrito
                client:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Nombre
                    phone:
                      type: string
                      description: Telefono
                    email:
                      type: string
                      description: Correo
                    address:
                      type: string
                      description: Dirección
                    slug:
                      type: string
                      description: URL
                    tradename:
                      type: string
                      description: Nombre Comercial
                    description:
                      type: string
                      description: Descripción
                    identification:
                      type: string
                      description: RUC o Identificación
                    logo:
                      type: string
                      description: Logo
                    active:
                      type: string
                      description: Si esta Activo
                    domain:
                      type: string
                      description: Dominio
                    banner:
                      type: string
                      description: Banner
                    social:
                      type: object
                      properties:
                        facebook:
                          type: string
                          description: Facebook
                        twitter:
                          type: string
                          description: Twitter
                        instagram:
                          type: string
                          description: Instagram
                    website:
                      type: string
                      description: Sitio Web
                    colors:
                      type: object
                      properties:
                        primary:
                          type: string
                          description: Color primario
                        secondary:
                          type: string
                          description: Color secundario
                        tertiary:
                          type: string
                          description: Color terciario
  "/clients/{id}":
    get:
      summary: Detalle de un Cliente
      tags:
      - Clientes
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Cliente encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/client"
        '404':
          description: Cliente no encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
    patch:
      summary: Actualizar Cliente
      tags:
      - Clientes
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Cliente actualizado
        '422':
          description: Error al actualizar el Cliente
        '404':
          description: Cliente no encontrado
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                geolocation:
                  type: object
                  properties:
                    country_id:
                      type: integer
                      description: País
                    department_id:
                      type: integer
                      description: Departamento
                    province_id:
                      type: integer
                      description: Provincia
                    district_id:
                      type: integer
                      description: Distrito
                client:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Nombre
                    phone:
                      type: string
                      description: Telefono
                    email:
                      type: string
                      description: Correo
                    address:
                      type: string
                      description: Dirección
                    slug:
                      type: string
                      description: URL
                    tradename:
                      type: string
                      description: Nombre Comercial
                    description:
                      type: string
                      description: Descripción
                    identification:
                      type: string
                      description: RUC o Identificación
                    logo:
                      type: string
                      description: Logo
                    active:
                      type: string
                      description: Si esta Activo
                    domain:
                      type: string
                      description: Dominio
                    banner:
                      type: string
                      description: Banner
                    social:
                      type: object
                      properties:
                        facebook:
                          type: string
                          description: Facebook
                        twitter:
                          type: string
                          description: Twitter
                        instagram:
                          type: string
                          description: Instagram
                    website:
                      type: string
                      description: Sitio Web
                    colors:
                      type: object
                      properties:
                        primary:
                          type: string
                          description: Color primario
                        secondary:
                          type: string
                          description: Color secundario
                        tertiary:
                          type: string
                          description: Color terciario
  "/countries":
    get:
      summary: Lista de Paises
      tags:
      - Paises
      parameters:
      - name: per_page
        in: query
        description: Cantidad de elementos por página
        schema:
          type: string
      - name: page
        in: query
        description: Página
        schema:
          type: string
      - name: q
        in: query
        description: |+
          Búsqueda por:

            * Nombre de Depositante

        schema:
          type: string
      - name: from
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Inicial'
      - name: to
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Final'
      - name: filter_range_date
        in: query
        schema:
          type: string
          enum:
          - created_at
          - updated_at
          - start_date
          - end_date
        description: |+
          Rango: Usar

            * **[created_at]** Fechas de Creación de los Registros <small>*(Por defecto)*</small>
            * **[updated_at]** Fechas de Actualización de los Registros

      - name: sort
        in: query
        schema:
          type: string
          enum:
          - created_at:desc
          - created_at:asc
          - updated_at:desc
          - updated_at:asc
        description: |+
          #### Ordenar:

            * **[created_at:desc]** Últimos creados al inicio
            * **[created_at:asc]** Últimos creados al final
            * **[updated_at:desc]** Últimos actualizados al inicio
            * **[updated_at:asc]** Últimos actualizados al final

      security:
      - bearerAuth: []
      responses:
        '200':
          description: Lista de Paises
          headers:
            Per-page:
              type: integer
              description: Total de elementos por página
            Total:
              type: integer
              description: Total de elementos
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/country"
    post:
      summary: Crear País
      tags:
      - Paises
      parameters: []
      security:
      - bearerAuth: []
      responses:
        '200':
          description: País creado
        '422':
          description: Error al crear País
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                country[name]:
                  type: string
                  description: Nombre
                country[banner]:
                  type: string
                  format: binary
                  description: Archivo de Foto jpg jpeg gif png
                country[iso]:
                  type: string
                  description: Iso
                country[var_name]:
                  type: string
                  description: Nombre en el Sistema
                country[code_phone]:
                  type: string
                  description: Código celular
                country[language]:
                  type: string
                  description: Idioma
                country[code]:
                  type: string
                  description: Código
                country[capital]:
                  type: string
                  description: Capital
  "/countries/{id}":
    get:
      summary: Detalle de un País
      tags:
      - Paises
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: País encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/country"
        '404':
          description: País no encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
    delete:
      summary: Eliminar País
      tags:
      - Paises
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: País eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado
                  message:
                    type: string
                    description: Mensaje o descripción
                  data:
                    "$ref": "#/components/schemas/country"
        '422':
          description: Error al eliminar País
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unprocessable_entity"
        '404':
          description: País no encontrada
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
  "/departments":
    get:
      summary: Lista de Departamentos
      tags:
      - Departamentos
      parameters:
      - name: country_id
        in: query
        description: ID del pais
        schema:
          type: integer
      - name: per_page
        in: query
        description: Cantidad de elementos por página
        schema:
          type: string
      - name: page
        in: query
        description: Página
        schema:
          type: string
      - name: q
        in: query
        description: |+
          Búsqueda por:

            * Nombre de Depositante

        schema:
          type: string
      - name: from
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Inicial'
      - name: to
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Final'
      - name: filter_range_date
        in: query
        schema:
          type: string
          enum:
          - created_at
          - updated_at
          - start_date
          - end_date
        description: |+
          Rango: Usar

            * **[created_at]** Fechas de Creación de los Registros <small>*(Por defecto)*</small>
            * **[updated_at]** Fechas de Actualización de los Registros

      - name: sort
        in: query
        schema:
          type: string
          enum:
          - created_at:desc
          - created_at:asc
          - updated_at:desc
          - updated_at:asc
        description: |+
          #### Ordenar:

            * **[created_at:desc]** Últimos creados al inicio
            * **[created_at:asc]** Últimos creados al final
            * **[updated_at:desc]** Últimos actualizados al inicio
            * **[updated_at:asc]** Últimos actualizados al final

      security:
      - bearerAuth: []
      responses:
        '200':
          description: Lista de Departamentos
          headers:
            Per-page:
              type: integer
              description: Total de elementos por página
            Total:
              type: integer
              description: Total de elementos
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/department"
    post:
      summary: Crear Departamento
      tags:
      - Departamentos
      parameters: []
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Departamento creado
        '422':
          description: Error al crear Departamento
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                country_id:
                  type: integer
                  description: ID del país
                name:
                  type: string
                  description: Nombre
                var_name:
                  type: string
                  description: Nombre en el Sistema
  "/departments/{id}":
    get:
      summary: Detalle de un Departamento
      tags:
      - Departamentos
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Departamento encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/department"
        '404':
          description: Departamento no encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
    patch:
      summary: Actualizar Departamento
      tags:
      - Departamentos
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Departamento actualizado
        '422':
          description: Error al actualizar el Departamento
        '404':
          description: Departamento no encontrado
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                country_id:
                  type: integer
                  description: ID del país
                name:
                  type: string
                  description: Nombre
                var_name:
                  type: string
                  description: Nombre en el Sistema
    delete:
      summary: Eliminar Departamento
      tags:
      - Departamentos
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Departamento eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado
                  message:
                    type: string
                    description: Mensaje o descripción
                  data:
                    "$ref": "#/components/schemas/department"
        '422':
          description: Error al eliminar Departamento
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unprocessable_entity"
        '404':
          description: Departamento no encontrada
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
  "/districts":
    get:
      summary: Lista de Distritos
      tags:
      - Distritos
      parameters:
      - name: province_id
        in: query
        description: ID de provincia
        schema:
          type: integer
      - name: per_page
        in: query
        description: Cantidad de elementos por página
        schema:
          type: string
      - name: page
        in: query
        description: Página
        schema:
          type: string
      - name: q
        in: query
        description: |+
          Búsqueda por:

            * Nombre de Depositante

        schema:
          type: string
      - name: from
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Inicial'
      - name: to
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Final'
      - name: filter_range_date
        in: query
        schema:
          type: string
          enum:
          - created_at
          - updated_at
          - start_date
          - end_date
        description: |+
          Rango: Usar

            * **[created_at]** Fechas de Creación de los Registros <small>*(Por defecto)*</small>
            * **[updated_at]** Fechas de Actualización de los Registros

      - name: sort
        in: query
        schema:
          type: string
          enum:
          - created_at:desc
          - created_at:asc
          - updated_at:desc
          - updated_at:asc
        description: |+
          #### Ordenar:

            * **[created_at:desc]** Últimos creados al inicio
            * **[created_at:asc]** Últimos creados al final
            * **[updated_at:desc]** Últimos actualizados al inicio
            * **[updated_at:asc]** Últimos actualizados al final

      security:
      - bearerAuth: []
      responses:
        '200':
          description: Lista de Departamentos
          headers:
            Per-page:
              type: integer
              description: Total de elementos por página
            Total:
              type: integer
              description: Total de elementos
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/district"
    post:
      summary: Crear Distrito
      tags:
      - Distritos
      parameters: []
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Distrito creado
        '422':
          description: Error al crear Distrito
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                province_id:
                  type: integer
                  description: ID de Provincia
                name:
                  type: string
                  description: Nombre
                var_name:
                  type: string
                  description: Nombre en el Sistema
  "/districts/{id}":
    get:
      summary: Detalle de un Distrito
      tags:
      - Distritos
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Distrito encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/district"
        '404':
          description: Distrito no encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
    patch:
      summary: Actualizar Distrito
      tags:
      - Distritos
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Distrito actualizado
        '422':
          description: Error al actualizar el Distrito
        '404':
          description: Distrito no encontrado
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                province_id:
                  type: integer
                  description: ID de Provincia
                name:
                  type: string
                  description: Nombre
                var_name:
                  type: string
                  description: Nombre en el Sistema
    delete:
      summary: Eliminar Distrito
      tags:
      - Distritos
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Distrito eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado
                  message:
                    type: string
                    description: Mensaje o descripción
                  data:
                    "$ref": "#/components/schemas/district"
        '422':
          description: Error al eliminar Distrito
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unprocessable_entity"
        '404':
          description: Distrito no encontrada
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
  "/geolocations":
    get:
      summary: Lista de Ubicaciones
      tags:
      - Ubicaciones
      parameters:
      - name: country_id
        in: query
        description: ID del País
        schema:
          type: integer
      - name: department_id
        in: query
        description: ID del Departamento
        schema:
          type: integer
      - name: province_id
        in: query
        description: ID de Provincia
        schema:
          type: integer
      - name: district_id
        in: query
        description: ID de Distrito
        schema:
          type: integer
      - name: per_page
        in: query
        description: Cantidad de elementos por página
        schema:
          type: string
      - name: page
        in: query
        description: Página
        schema:
          type: string
      - name: from
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Inicial'
      - name: to
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Final'
      - name: filter_range_date
        in: query
        schema:
          type: string
          enum:
          - created_at
          - updated_at
          - start_date
          - end_date
        description: |+
          Rango: Usar

            * **[created_at]** Fechas de Creación de los Registros <small>*(Por defecto)*</small>
            * **[updated_at]** Fechas de Actualización de los Registros

      - name: sort
        in: query
        schema:
          type: string
          enum:
          - created_at:desc
          - created_at:asc
          - updated_at:desc
          - updated_at:asc
        description: |+
          #### Ordenar:

            * **[created_at:desc]** Últimos creados al inicio
            * **[created_at:asc]** Últimos creados al final
            * **[updated_at:desc]** Últimos actualizados al inicio
            * **[updated_at:asc]** Últimos actualizados al final

      security:
      - bearerAuth: []
      responses:
        '200':
          description: Lista de Ubicaciones
          headers:
            Per-page:
              type: integer
              description: Total de elementos por página
            Total:
              type: integer
              description: Total de elementos
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/geolocation"
    post:
      summary: Crear Ubicacion
      tags:
      - Ubicaciones
      parameters: []
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Ubicacion creado
        '422':
          description: Error al crear Ubicacion
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                geolocation:
                  type: object
                  properties:
                    country_id:
                      type: integer
                      description: ID País
                    department_id:
                      type: integer
                      description: ID Departamento
                    province_id:
                      type: integer
                      description: ID Provincia
                    district_id:
                      type: integer
                      description: ID Distrito
  "/geolocations/{id}":
    get:
      summary: Detalle de una Ubicacion
      tags:
      - Ubicaciones
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Ubicacion encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/geolocation"
        '404':
          description: Ubicacion no encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
    patch:
      summary: Actualizar Ubicaciones
      tags:
      - Ubicaciones
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Ubicacion actualizado
        '422':
          description: Error al actualizar el Ubicacion
        '404':
          description: Ubicacion no encontrado
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                geolocation:
                  type: object
                  properties:
                    country_id:
                      type: integer
                      description: ID País
                    department_id:
                      type: integer
                      description: ID Departamento
                    province_id:
                      type: integer
                      description: ID Provincia
                    district_id:
                      type: integer
                      description: ID Distrito
    delete:
      summary: Eliminar Ubicacion
      tags:
      - Ubicaciones
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Ubicacion eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado
                  message:
                    type: string
                    description: Mensaje o descripción
                  data:
                    "$ref": "#/components/schemas/geolocation"
        '422':
          description: Error al eliminar Ubicacion
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unprocessable_entity"
        '404':
          description: Ubicacion eliminado no encontrada
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
  "/locations":
    get:
      summary: Lista de Campus
      tags:
      - Campus
      parameters:
      - name: per_page
        in: query
        description: Cantidad de elementos por página
        schema:
          type: string
      - name: page
        in: query
        description: Página
        schema:
          type: string
      - name: q
        in: query
        description: |+
          Búsqueda por:

            * Nombre del campus
            * Identification
            * description
            * address

        schema:
          type: string
      - name: from
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Inicial'
      - name: to
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Final'
      - name: filter_range_date
        in: query
        schema:
          type: string
          enum:
          - created_at
          - updated_at
          - start_date
          - end_date
        description: |+
          Rango: Usar

            * **[created_at]** Fechas de Creación de los Registros <small>*(Por defecto)*</small>
            * **[updated_at]** Fechas de Actualización de los Registros

      - name: sort
        in: query
        schema:
          type: string
          enum:
          - created_at:desc
          - created_at:asc
          - updated_at:desc
          - updated_at:asc
        description: |+
          #### Ordenar:

            * **[created_at:desc]** Últimos creados al inicio
            * **[created_at:asc]** Últimos creados al final
            * **[updated_at:desc]** Últimos actualizados al inicio
            * **[updated_at:asc]** Últimos actualizados al final

      security:
      - bearerAuth: []
      responses:
        '200':
          description: Lista de Campus
          headers:
            Per-page:
              type: integer
              description: Total de elementos por página
            Total:
              type: integer
              description: Total de elementos
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/location"
    post:
      summary: Crear Campus
      tags:
      - Campus
      parameters: []
      security:
      - bearerAuth: []
      responses:
        '200':
          description: campus creado
        '422':
          description: Error al crear Campus
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                geolocation[country_id]:
                  type: integer
                  description: ID País
                geolocation[department_id]:
                  type: integer
                  description: ID Departamento
                geolocation[province_id]:
                  type: integer
                  description: ID Provincia
                geolocation[district_id]:
                  type: integer
                  description: ID Distrito
                location[client_id]:
                  type: integer
                  description: ID del Cliente
                location[name]:
                  type: string
                  description: Nombre
                location[identification]:
                  type: string
                  description: Ruc
                location[domain]:
                  type: string
                  description: Dominio
                location[description]:
                  type: string
                  description: Descripción
                location[address]:
                  type: string
                  description: dirección
                location[logo]:
                  type: string
                  format: binary
                  description: Archivo de logo jpg jpeg gif png
  "/locations/{id}":
    get:
      summary: Detalle de un Campus
      tags:
      - Campus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Campus encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/location"
        '404':
          description: Campus no encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
    patch:
      summary: Actualizar Campus
      tags:
      - Campus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Campus actualizado
        '422':
          description: Error al actualizar el Campus
        '404':
          description: Campus no encontrado
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                geolocation[country_id]:
                  type: integer
                  description: ID País
                geolocation[department_id]:
                  type: integer
                  description: ID Departamento
                geolocation[province_id]:
                  type: integer
                  description: ID Provincia
                geolocation[district_id]:
                  type: integer
                  description: ID Distrito
                location[client_id]:
                  type: integer
                  description: ID del Cliente
                location[name]:
                  type: string
                  description: Nombre
                location[identification]:
                  type: string
                  description: Ruc
                location[domain]:
                  type: string
                  description: Dominio
                location[description]:
                  type: string
                  description: Descripción
                location[address]:
                  type: string
                  description: dirección
                location[logo]:
                  type: string
                  format: binary
                  description: Archivo de logo jpg jpeg gif png
    delete:
      summary: Eliminar Campus
      tags:
      - Campus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Campus eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado
                  message:
                    type: string
                    description: Mensaje o descripción
                  data:
                    "$ref": "#/components/schemas/location"
        '422':
          description: Error al eliminar Campus
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unprocessable_entity"
        '404':
          description: Campus no encontrada
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
  "/provinces":
    get:
      summary: Lista de Provincias
      tags:
      - Provincias
      parameters:
      - name: department_id
        in: query
        description: ID de departamento
        schema:
          type: integer
      - name: per_page
        in: query
        description: Cantidad de elementos por página
        schema:
          type: string
      - name: page
        in: query
        description: Página
        schema:
          type: string
      - name: q
        in: query
        description: |+
          Búsqueda por:

            * Nombre de Depositante

        schema:
          type: string
      - name: from
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Inicial'
      - name: to
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Final'
      - name: filter_range_date
        in: query
        schema:
          type: string
          enum:
          - created_at
          - updated_at
          - start_date
          - end_date
        description: |+
          Rango: Usar

            * **[created_at]** Fechas de Creación de los Registros <small>*(Por defecto)*</small>
            * **[updated_at]** Fechas de Actualización de los Registros

      - name: sort
        in: query
        schema:
          type: string
          enum:
          - created_at:desc
          - created_at:asc
          - updated_at:desc
          - updated_at:asc
        description: |+
          #### Ordenar:

            * **[created_at:desc]** Últimos creados al inicio
            * **[created_at:asc]** Últimos creados al final
            * **[updated_at:desc]** Últimos actualizados al inicio
            * **[updated_at:asc]** Últimos actualizados al final

      security:
      - bearerAuth: []
      responses:
        '200':
          description: Lista de Departamentos
          headers:
            Per-page:
              type: integer
              description: Total de elementos por página
            Total:
              type: integer
              description: Total de elementos
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/province"
    post:
      summary: Crear Provincia
      tags:
      - Provincias
      parameters: []
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Provincia creado
        '422':
          description: Error al crear Provincia
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                department_id:
                  type: integer
                  description: ID del departamento
                name:
                  type: string
                  description: Nombre
                var_name:
                  type: string
                  description: Nombre en el Sistema
  "/provinces/{id}":
    get:
      summary: Detalle de una Provincia
      tags:
      - Provincias
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Provincia encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/province"
        '404':
          description: Provincia no encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
    patch:
      summary: Actualizar Provincia
      tags:
      - Provincias
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Provincia actualizado
        '422':
          description: Error al actualizar el Provincia
        '404':
          description: Provincia no encontrado
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                department_id:
                  type: integer
                  description: ID del departamento
                name:
                  type: string
                  description: Nombre
                var_name:
                  type: string
                  description: Nombre en el Sistema
    delete:
      summary: Eliminar Provincia
      tags:
      - Provincias
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Provincia eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado
                  message:
                    type: string
                    description: Mensaje o descripción
                  data:
                    "$ref": "#/components/schemas/province"
        '422':
          description: Error al eliminar Provincia
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unprocessable_entity"
        '404':
          description: Provincia no encontrada
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
  "/user_locations":
    get:
      summary: Lista de permisos
      tags:
      - Permisos
      parameters:
      - name: user_id
        in: query
        description: ID del Usuario
        schema:
          type: integer
      - name: location_id
        in: query
        description: ID de Location
        schema:
          type: integer
      - name: per_page
        in: query
        description: Cantidad de elementos por página
        schema:
          type: string
      - name: page
        in: query
        description: Página
        schema:
          type: string
      - name: from
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Inicial'
      - name: to
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Final'
      - name: filter_range_date
        in: query
        schema:
          type: string
          enum:
          - created_at
          - updated_at
          - start_date
          - end_date
        description: |+
          Rango: Usar

            * **[created_at]** Fechas de Creación de los Registros <small>*(Por defecto)*</small>
            * **[updated_at]** Fechas de Actualización de los Registros

      - name: sort
        in: query
        schema:
          type: string
          enum:
          - created_at:desc
          - created_at:asc
          - updated_at:desc
          - updated_at:asc
        description: |+
          #### Ordenar:

            * **[created_at:desc]** Últimos creados al inicio
            * **[created_at:asc]** Últimos creados al final
            * **[updated_at:desc]** Últimos actualizados al inicio
            * **[updated_at:asc]** Últimos actualizados al final

      security:
      - bearerAuth: []
      responses:
        '200':
          description: Lista de Permisos
          headers:
            Per-page:
              type: integer
              description: Total de elementos por página
            Total:
              type: integer
              description: Total de elementos
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/user_location"
    post:
      summary: Crear Permiso
      tags:
      - Permisos
      parameters: []
      security:
      - bearerAuth: []
      responses:
        '200':
          description: permiso creado
        '422':
          description: Error al crear permiso
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_location:
                  type: object
                  properties:
                    user_id:
                      type: string
                      description: ID del usuario
                    location_id:
                      type: integer
                      description: ID de location
  "/user_locations/{id}":
    get:
      summary: Detalle de un Permiso
      tags:
      - Permisos
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Permiso encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/user_location"
        '404':
          description: Permiso no encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
    patch:
      summary: Actualizar Permiso
      tags:
      - Permisos
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Permiso actualizado
        '422':
          description: Error al actualizar Permiso
        '404':
          description: Permiso no encontrado
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_location:
                  type: object
                  properties:
                    user_id:
                      type: string
                      description: ID del usuario
                    location_id:
                      type: integer
                      description: ID de location
  "/users":
    get:
      summary: Lista de Usuarios
      tags:
      - Usuarios
      parameters:
      - name: client_id
        in: query
        description: ID del cliente
        schema:
          type: integer
      - name: active
        in: query
        description: Activo e Inactivo
        schema:
          type: boolean
      - name: user_type
        in: query
        description: Tipo de usuario
        schema:
          type: string
      - name: per_page
        in: query
        description: Cantidad de elementos por página
        schema:
          type: string
      - name: page
        in: query
        description: Página
        schema:
          type: string
      - name: q
        in: query
        description: |+
          Búsqueda por:

            * Nombre
            * Email

        schema:
          type: string
      - name: from
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Inicial'
      - name: to
        in: query
        schema:
          type: string
          format: date
        description: 'Rango: Fecha Final'
      - name: filter_range_date
        in: query
        schema:
          type: string
          enum:
          - created_at
          - updated_at
          - start_date
          - end_date
        description: |+
          Rango: Usar

            * **[created_at]** Fechas de Creación de los Registros <small>*(Por defecto)*</small>
            * **[updated_at]** Fechas de Actualización de los Registros

      - name: sort
        in: query
        schema:
          type: string
          enum:
          - created_at:desc
          - created_at:asc
          - updated_at:desc
          - updated_at:asc
        description: |+
          #### Ordenar:

            * **[created_at:desc]** Últimos creados al inicio
            * **[created_at:asc]** Últimos creados al final
            * **[updated_at:desc]** Últimos actualizados al inicio
            * **[updated_at:asc]** Últimos actualizados al final

      security:
      - bearerAuth: []
      responses:
        '200':
          description: Lista de Usuarios
          headers:
            Per-page:
              type: integer
              description: Total de elementos por página
            Total:
              type: integer
              description: Total de elementos
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/user"
    post:
      summary: Crear Usuario
      tags:
      - Usuarios
      parameters: []
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Usuario creado
        '422':
          description: Error al crear Usuario
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Nombre
                    email:
                      type: string
                      description: Email
                    phone:
                      type: string
                      description: Celular
                    password:
                      type: string
                      description: Contraseña
                    user_type:
                      type: string
                      enum:
                      - Super_admin
                      - location_admin
                      - client_admin
                      description: Tipo de usuario
                    active:
                      type: boolean
                      description: Si esta Activo
                    client_id:
                      type: integer
                      description: ID del Cliente
  "/users/{id}":
    get:
      summary: Detalle de un Usuario
      tags:
      - Usuarios
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/user"
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
    patch:
      summary: Actualizar Usuario
      tags:
      - Usuarios
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Usuario actualizado
        '422':
          description: Error al actualizar el Usuario
        '404':
          description: Usuario no encontrado
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Nombre
                    email:
                      type: string
                      description: Email
                    phone:
                      type: string
                      description: Celular
                    password:
                      type: string
                      description: Contraseña
                    user_type:
                      type: string
                      enum:
                      - Super_admin
                      - location_admin
                      - client_admin
                      description: Tipo de usuario
                    active:
                      type: boolean
                      description: Si esta Activo
                    client_id:
                      type: integer
                      description: ID del Cliente
    delete:
      summary: Eliminar Usuario
      tags:
      - Usuarios
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Usuario eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado
                  message:
                    type: string
                    description: Mensaje o descripción
                  data:
                    "$ref": "#/components/schemas/user"
        '422':
          description: Error al eliminar Usuario
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unprocessable_entity"
        '404':
          description: Usuario no encontrada
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
servers:
- url: http://localhost:3000/api/v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    user:
      type: object
      properties:
        id:
          type: integer
          description: ID
        name:
          type: string
          description: Nombre
        phone:
          type: string
          description: Celular
        email:
          type: string
          description: Email
        active:
          type: boolean
          description: Si esta Activo
        user_type:
          type: string
          enum:
          - super_admin
          - location_admin
          - client_admin
          description: Tipo de usuario
        client:
          "$ref": "#/components/schemas/client"
        created_at:
          type: string
          format: date-time
          description: Fecha de creación
        updated_at:
          type: string
          format: date-time
          description: Fecha de actualización
      required:
      - id
    client:
      type: object
      properties:
        id:
          type: integer
          description: ID
        name:
          type: string
          description: Nombre
        phone:
          type: string
          description: Telefono
        email:
          type: string
          description: correo electrónico
        slug:
          type: string
          description: URL
        description:
          type: string
          description: Descripción
        tradename:
          type: string
          description: Nombre Comercial
        identification:
          type: string
          description: RUC o Identificación
        logo:
          type: string
          description: Logo
        country:
          type: string
          description: Pais
        location:
          type: string
          description: Departamento o Localidad
        address:
          type: string
          description: Dirección
        social:
          type: string
          description: Redes Sociales
        website:
          type: string
          description: Sitio Web
        colors:
          type: string
          description: Colores
        domain:
          type: string
          description: Dominio
        banner:
          type: string
          description: Banner
        active:
          type: boolean
          description: Si esta Activo
        created_at:
          type: string
          format: date-time
          description: Fecha de creación
        updated_at:
          type: string
          format: date-time
          description: Fecha de actualización
        geolocation:
          type: object
          properties:
            id:
              type: integer
              description: ID de geolocalización
            country:
              type: string
              description: País
            department:
              type: string
              description: Departamento
            province:
              type: string
              description: Provincia
            district:
              type: string
              description: Distrito
      required:
      - id
    country:
      type: object
      properties:
        id:
          type: integer
          description: ID
        name:
          type: string
          description: Nombre
        code:
          type: string
          description: Código
        iso:
          type: string
          description: Iso
        var_name:
          type: string
          description: Nombre en el Sistema
        code_phone:
          type: string
          description: Código celular
        language:
          type: string
          description: Idioma
        banner:
          type: string
          description: Bandera
        capital:
          type: string
          description: Capital
        created_at:
          type: string
          format: date-time
          description: Fecha de creación
        updated_at:
          type: string
          format: date-time
          description: Fecha de actualización
      required:
      - id
    department:
      type: object
      properties:
        id:
          type: integer
          description: ID
        name:
          type: string
          description: Nombre
        var_name:
          type: string
          description: Nombre en el Sistema
        created_at:
          type: string
          format: date-time
          description: Fecha de creación
        updated_at:
          type: string
          format: date-time
          description: Fecha de actualización
      required:
      - id
    province:
      type: object
      properties:
        id:
          type: integer
          description: ID
        name:
          type: string
          description: Nombre
        var_name:
          type: string
          description: Nombre en el Sistema
        created_at:
          type: string
          format: date-time
          description: Fecha de creación
        updated_at:
          type: string
          format: date-time
          description: Fecha de actualización
      required:
      - id
    district:
      type: object
      properties:
        id:
          type: integer
          description: ID
        name:
          type: string
          description: Nombre
        var_name:
          type: string
          description: Nombre en el Sistema
        created_at:
          type: string
          format: date-time
          description: Fecha de creación
        updated_at:
          type: string
          format: date-time
          description: Fecha de actualización
      required:
      - id
    location:
      type: object
      properties:
        id:
          type: integer
          description: ID
        name:
          type: string
          description: Nombre
        identification:
          type: string
          description: RUC
        domain:
          type: string
          description: Dominio
        description:
          type: string
          description: Descripción
        address:
          type: string
          description: Dirección
        client:
          "$ref": "#/components/schemas/client"
        geolocation:
          "$ref": "#/components/schemas/geolocation"
        created_at:
          type: string
          format: date-time
          description: Fecha de creación
        updated_at:
          type: string
          format: date-time
          description: Fecha de actualización
      required:
      - id
    certificate_category:
      type: object
      properties:
        id:
          type: integer
          description: ID
        name:
          type: string
          description: Nombre
        created_at:
          type: string
          format: date-time
          description: Fecha de creación
        updated_at:
          type: string
          format: date-time
          description: Fecha de actualización
        client:
          "$ref": "#/components/schemas/client"
      required:
      - id
    user_location:
      type: object
      properties:
        id:
          type: integer
          description: ID
        created_at:
          type: string
          format: date-time
          description: Fecha de creación
        updated_at:
          type: string
          format: date-time
          description: Fecha de actualización
        user:
          "$ref": "#/components/schemas/user"
        location:
          "$ref": "#/components/schemas/location"
      required:
      - id
    certificate:
      type: object
      properties:
        id:
          type: integer
          description: ID
        name:
          type: string
          description: Nombre
        folio:
          type: string
          description: Folio
        register:
          type: string
          description: Registro
        description:
          type: string
          description: Descripcion
        created_at:
          type: string
          format: date-time
          description: Fecha de creación
        updated_at:
          type: string
          format: date-time
          description: Fecha de actualización
        location:
          "$ref": "#/components/schemas/location"
        certificate_category:
          "$ref": "#/components/schemas/certificate_category"
      required:
      - id
    geolocation:
      type: object
      properties:
        id:
          type: integer
          description: ID
        created_at:
          type: string
          format: date-time
          description: Fecha de creación
        updated_at:
          type: string
          format: date-time
          description: Fecha de actualización
        country:
          "$ref": "#/components/schemas/country"
        department:
          "$ref": "#/components/schemas/department"
        province:
          "$ref": "#/components/schemas/province"
        district:
          "$ref": "#/components/schemas/district"
      required:
      - id
...
